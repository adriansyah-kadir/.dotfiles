exit
$user = new User;
$user->all()
new Adlin
new Admin
$admin = new Admin
$admin
Book::all()
new Book::all()
use App\Models\Book;
Boom
Book
Book::class;
Book::all()
Book::find(9)
Book::findOrFail(9)
Book::find(9)
if(Book::find(1))
{
echo 'fail'
}
if(Book::find(1))
{
echo 'fail';
}
clear
exit
(new Book)
use App\Models\Book
(new Book)
(new Book)->all()
(new Book)->desc()
(new Book)
$book = new Book
$book->name = "Nokota"
$book->author = "Good Friend"
$book->save()
Book::all()
$book = new Book
$book->all()
clear
$book->all()
$arr = $book->all()
$arr
$arr->find
$arr->find()
$arr->find(2)
$arr->find(1)
$arr
$arr->where("name")
$arr->where("name","")
$arr->where("name","Nokota")
$arr->where("name","Nokota")
exit
new PostController;
new App\Http\Controllers\PostController;
exit
use App
App
use App\Http\Controllers\Controller
Controller
Controller::class
use App\Http\Controllers\PostController
PostController::class
exit
new App\Http\Controllers\PostController
use App\Http\Controllers\PostController;
PostController::class
User
User::create
User::create()
User::create(
"fullName"=>"Adriansyah Kadir",
User::create(
"fullName"=>"Adriansyah Kadir","nickName"=>"aldo","email"=>"adriansyahkadir293@gmail.com","img"=>"img/profile.jpg")
User::create([
"fullName"=>"Adriansyah Kadir","nickName"=>"aldo","email"=>"adriansyahkadir293@gmail.com","img"=>"img/profile.jpg"])
clear
User::all()
User::find
User::find(1)
exit
User::create([
"fullName"=>"Rivaldi Kadir",
"nickName"=>"aldi",
"email"=>"algladiator18@gmail.com",
"img"=>"img/profile2.jpg"
])
Post::create([
"title"=>"Post 1",
"slug"=>"lorem ipsum",
"author"=>"aldo",
"body"=>"lorem ipsum color amet"
])
Post::create([
"title"=>"Post 1",
"slug"=>"lorem ipsum",
"author"=>"aldo",
"body"=>"lorem ipsum color amet"
])
Post:all()
Post::all()
Post::create([
"title"=>"Post 2"
,"slug"=>"post2",
"author"=>"adrian",
"body"=>"hahahahahahaha"])
Post::where("slug","post2")
Post::where("id","1")
Post::where("id",1)
Post::wher
Post::find()
Post::find(1)
Post::where()
Post::find(2)
Post::find(3)
Post::find(1)
Post::all()
$p = Post::all()
$p
if (!$p){
echo "hai";}
if ($p){
echo "hai";}
$p ?? 100
$arr = [1,8,6]
[$arr]
[...$arr]
Post::where("id",1)
Post::where('title','Post 1')
Post::where("author","aldo")
Post::where("author","aldo")
Post::where("author","aldo")->update()
Post::where("author","aldo")->update("body","this is body")
Post::where("author","aldo")->update(["body"=>"this is body"])
Post::find(1)->update(["slug"=>"post-1"])
Post::find(2)->update(["slug"=>"post-2"])
Post::create([
"title"=>"Post 3",
"slug"=>"post 3",
"author"=>"rian",
"body"=>"ha hi hu he ho la li lu le lo"
])
User::find(1)
User::find(1) ?? 100
Category::create()
Category::create([
"name"=>"Programming"
,"slug"=>"programming"])
Category::create([
"name"=>"Programming"
,"slug"=>"programming"])
Category::create([
"name"=>"Programming"
,"slug"=>"programming"])
Category::create([
"name"=>"Web Design",
"slug"=>"web-design"])
Category::create([
"name"=>"Personal"
,"slug"=>"personal"])
Category::all()
Post::all()
clear
ls
clear
Post::create([
  "title"=>"Post 1",
  "slug"=>"post-1",
  "category_id"=>1,                                                     "excerpt"=>" Elit ipsum dolores sapiente ea voluptatem sed? Magnam beatae illo officiis ipsum excepturi. ",                                 "body"=>" Sit animi iure animi at non. Dolores id quasi maiores eveniet magnam fugiat reiciendis fugiat ducimus eligendi sapiente! Ipsa eum culpa ipsam nihil architecto dicta Non autem suscipit quia Sit totam alias rem voluptates dolorem Reiciendis provident adipisci commodi quia optio! Beatae iure neque minus tempora soluta veritatis? Id quis veritatis rem quam quam Fuga voluptatem fugit explicabo fuga! "         ])
Post::create([
  "title"=>"Post 1",
  "author"=>"aldo",
  "slug"=>"post-1",                                                     "category_id"=>1,                                                     "excerpt"=>" Elit ipsum dolores sapiente ea voluptatem sed? Magnam beatae illo officiis ipsum excepturi. ",                                 "body"=>" Sit animi iure animi at non. Dolores id quasi maiores eveniet magnam fugiat reiciendis fugiat ducimus eligendi sapiente! Ipsa eum culpa ipsam nihil architecto dicta Non autem suscipit quia Sit totam alias rem voluptates dolorem Reiciendis provident adipisci commodi quia optio! Beatae iure neque minus tempora soluta veritatis? Id quis veritatis rem quam quam Fuga voluptatem fugit explicabo fuga! "
])
clear
Post::create([
  "title"=>"Post 2",
  "author"=>"aldi",
  "slug"=>"post-2",                                                     "category_id"=>2,                                                     "excerpt"=>" Elit ipsum dolores sapiente ea voluptatem sed? Magnam beatae illo officiis ipsum excepturi. ",                                 "body"=>" Sit animi iure animi at non. Dolores id quasi maiores eveniet magnam fugiat reiciendis fugiat ducimus eligendi sapiente! Ipsa eum culpa ipsam nihil architecto dicta Non autem suscipit quia Sit totam alias rem voluptates dolorem Reiciendis provident adipisci commodi quia optio! Beatae iure neque minus tempora soluta veritatis? Id quis veritatis rem quam quam Fuga voluptatem fugit explicabo fuga! "
])
Post::create([
  "title"=>"Post 3",
  "author"=>"aldi",
  "slug"=>"post-3",                                                     "category_id"=>3,                                                     "excerpt"=>" Elit ipsum dolores sapiente ea voluptatem sed? Magnam beatae illo officiis ipsum excepturi. ",                                 "body"=>" Sit animi iure animi at non. Dolores id quasi maiores eveniet magnam fugiat reiciendis fugiat ducimus eligendi sapiente! Ipsa eum culpa ipsam nihil architecto dicta Non autem suscipit quia Sit totam alias rem voluptates dolorem Reiciendis provident adipisci commodi quia optio! Beatae iure neque minus tempora soluta veritatis? Id quis veritatis rem quam quam Fuga voluptatem fugit explicabo fuga! "
])
Category::all()
$post = Post::first()
$post->category();
$post->category()->get();
$post->category()->name;
$post->category()->name();
$post->category;
$post = Post::first()
$post->category
$post = Post::first()
$post->category
$post->category()->get()
$post = Post::first()
$post->category()->get()
$post->category
$post = Post::first()
$post->category
$post = Post::first()
$post->category
$post = Post::first()
$post->category
User::all()
User::all()
User:all()
User::all()
User::all()
User::factory()
User::factory()->create()
User::all()
$faker
$faker = Faker\Factory::create()
$faker->image('public/img',640,480,null,true,true)
ls
cleat
clear
base_path()
base_path("public")
base_path("public/img")
$faker = Faker\Factory::create()
$faker->image()
$faker->image(base_path('public/img'),680,420,null,false,true)
User::first()
User::all()
Post::factory(5)
Post::factory(5)->create()
Post::factory(5)->create()
Post::factory(5)->create()
Post::factory(5)->create()
Post::factory(5)->create()
User::all()
User::factory(10)->create()
User::all()
Category::all()
Post::all()
User::first()
Post::first()
Post::all()
User::all()
Post::all()
DB::table()
DB::table('users')
DB::table('users')->select('*')
DB::table('users')->select('*')->get()
DB::table('users')->select('*')->get()
DB::table('users')->select('name')->get()
DB::table('users')->select('name')->limit('2')->get()
DB::table('users')->select('name')->limit('2')->get()->map()
DB::table('users')->select('name')->limit('2')->get()->map(function($e){echo $e;})
DB::table('users')->select('name')->limit('2')->get()->map(function($e){dd($e)})
DB::table('users')->select('name')->limit('7')->get()->map(function($e){dd($e)})
DB::table('users')->select('name')->limit('7')->get()->map(function($e){ return concat($e,$e)})
DB::table('posts')->first()
DB::table('posts')->first()->slug
DB::table('posts')->first()
DB::table('posts')->where('id',1)
DB::table('posts')->where('id',1)->get()
DB::table('posts')->where('id',10)->get()
DB::table('posts')->select('id')->where('id',10)->
;
DB::table('posts')->select('id')->where('id',10)->get()
DB::table('posts')->select('id')->where('id',10)->first()
DB::table('posts')->where('id',10)->value('id')
DB::table('posts')->where('id',10)->first()->id
DB::table('users')->pluck('id')
DB::table('users')->select('id')->get()
DB::table('users')->pluck('id')
DB::table('users')->pluck('id',1)
DB::table('users')->pluck('id','1')
DB::table('users')->pluck('id','name')
DB::table('users')->pluck('id','name','email')
DB::table('users')->pluck('id','name')
DB::table('users')->pluck('name','id')
Post::all()
DB::table('posts')->orderBy('id')
DB::table('posts')->orderBy('id')->get()
DB::table('posts')->orderBy('id')->pluck('id')
DB::table('posts')->orderBy('id','DESC')->pluck('id')
DB::table('posts')->orderBy('title','DESC')->pluck('id')
DB::table('posts')->orderBy('title','DESC')->pluck('title')
ls
clear
ls
DB::table('posts')->chunk(function($e){echo $e;})
DB::table('posts')->chunk(5,function($e){echo $e;})
DB::table('posts')->orderBy('id')->chunk(5,function($e){echo $e;})
DB::table('posts')->orderBy('id')->chunk(5,function($e){echo "$e\n";})
DB::table('posts')->orderBy('id')->chunk(5,function($e){echo "$e\n";})
DB::table('posts')->orderBy('id')->chunk(5,function($e){})
App::environment()
APP_ENV
config('faker')
config('local')
config('APP_NAME')
config('name')
config('env')
config('app.env')
config('app.name')
Post::first()
Category::all()
Post::all()
$p = Post::where('title','like','%Nihil nesciunt at sed labore.%')
$p = Post::where('title','like','%Nihil nesciunt at sed labore.%')->get()
$p = Post::where('title','like','%Nihie.%')->get()
$p = Post::where('title','like','%N.%')->get()
$p = Post::where('title','like','%N%')->get()
Post::where('title','Quos asperiores vitae.')->get()
User::all() ?? []
User::all() ?? []
try{}
try{
User::all()
}catch($e){
try{
User::all();
}catch($e){echo $e;}
try{
User::all();
}catch(){}
Category::factory(20)->create()
Category::factory(200)->create()
User::all()
session()
session()->invalidate()
session()->regenerate()
Category::create(["name"=>"aldo","slug"=>"aldo"])
$aa = Category::create(["name"=>"aldo","slug"=>"aldo"])
$aa
Category::all()
app()
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\MyService::class)
app()->make(\App\Services\HaiService::class)
Post::first()
Post::all()
User::all()
User::all()
User::first()->name
Post::find(1)->update()
Post::find(1)
Post::find(1)->update(["title"=>"halo"])
Post::find(1)
Post::first()
Post::all()
Post::all()
Post::all()
Post::all()
Post::all()
Post::all()
Post::all()
Post::all()
Post::all()
User::all()
Post::all()
Post::all()
Post::all()
Post::all()
$h = Post::find(1)
$h->update(["body"=>"bro diubah"])
Post::all()
$p = Post::find(7)
$p->update(["body"]=>"hai diubah")
$p->update(["body"=>"hai diubah"])
Post::all()
time()
User::all()
User::where("id",1)
User::where("id",1)->get()
User::where("id","not",,1)->get()
User::where("id","not",1)->get()
User::where("id","!=",1)->get()
User::where("id","!=",1)->get()
User::all()
Friend::all()
App\Models\Friend
App\Models\Friend::all()
App\Models\Friend::all()
App\Models\Friend::all()
Friend::where("user_id",Auth::id())->where("friend_id",$request->i   nput("user"))
Friend::where("user_id",Auth::id())->where("friend_id",6)
App\Models\Friend::where("user_id",Auth::id())->where("friend_id",6)
App\Models\Friend::where("user_id",Auth::id())->where("friend_id",1)
App\Models\Friend::where("user_id",Auth::id())->where("friend_id",6)->get()
App\Models\Friend::where("user_id",1)->where("friend_id",6)->get()
App\Models\Friend::all()
App\Models\Friend::all()
App\Models\Friend::all()
User::where("id","not in","()")
User::where("id","not in","()")->get()
User::where("id","not in","1")->get()
User::where("id","in","(1)")->get()
User::where("id","in","('1')")->get()
DB::query()
DB::query("")
DB::query("select * from users")
DB::query("select * from users");
DB::query("select * from users")->get()
DB::query("select * from app.users")->get()
DB::table("users")
DB::table("users")->query("select *")
DB::table("users")->join
DB::table("users")->join()
DB::table("users")->join("friends")
DB::join("friends")
DB::table("users")->join("friends","id")
DB::table("users")->join("friends","users")
DB::table("users")->join("friends","users")->where("id",1)
DB::table("users")->join("friends","users")->where("id",1)->get()
DB::table("users")->join("friends","users")->where("id",1)->get()
DB::table("users")->join("friends","user_id")->where("id",1)->get()
DB::table("users")->join("friends",null)->where("id",1)->get()
DB::table("users")->join("friends","friend_id")->where("id",1)->get()
DB::table("users")->join("friends","user_id",1)->where("id",1)->get()
DB::table("users")->join("friends","id",1)->where("id",1)->get()
DB::table("users")->join("friends","id",1)->get()
DB::table("users")->join("friends","user_id","")->get()
User::first()->friends()
User::first()->friends()->get()
(User::first())->friends()
(User::first())->friends()
(User::first())->friends()
(User::find(11))->friends()
(User::find(11))->friends()
(User::find(11))->friends()
(User::find(11))->friends()
(User::find(11))->friends()
(User::find(11))->friends()
(User::find(11))->friends()
User::first()->friend(11)
User::first()->friend(11)
User::first()->friend(11)
User::find(11)->friend(11)
User::find(11)->friend(1)
User::find(11)->friend(1)
User::find(11)->friend(1)->get()
User::find(11)->friend(1)->get()
User::find(11)->friend(1)->get()
User::find(11)->friend(1)->get()
User::find(11)->friend(6)->get()
Friend::all()
DB::table("users")->join("friends","user_id")->where("
a;a
;
;
"
;
App\Models\Friend::all()
User::find(11)->friend(9)
User::find(11)->friend(9)
User::find(11)->friend(9)
User::find(11)->friend(9)
User::find(11)->friend(9)
User::find(11)->friend(User::first())
User::find(11)->friend(User::first())
User::find(11)->friends
User::find(11)->friends
User::find(11)->friend(User::first())
User::find(11)->friend(User::first())
User::find(11)->friend(User::first())
User::find(11)->friend(User::find(6))
User::find(11)->friend(User::find(2))
App\Models\Friend::all()
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(9))
User::find(11)->friend(User::find(10))
User::find(11)->friend(User::find(1))
User::find(11)->friend(User::find(1))
User::find(11)->friend(User::find(9))
User::find(1)->friend(User::find(9))
User::first()->friendRequest
User::first()->friendRequest()
User::first()->friendRequest
User::first(11)->friendRequest
User::find(11)->friendRequest
User::find(11)
User::find(11)->friendRequest
User::find(11)->friendRequest
User::find(11)->friendRequest
User::find(11)->friendRequest
User::find(11)->friendRequest
User::find(11)->friendRequest
User::find(11)->friendRequest
User::find(11)->friendRequest
User::all()
User::find(11)->friendRequest
collect([97,8])
collect([97,8]).has(3)
collect([97,8])->has(3)
collect([97,8])->has(8)
collect([97,8])->has(0)
collect([97,8])->item
collect([97,8])->item()
collect([97,8])->contains(9)
collect([97,8])->contains(8)
User::all()->contains
User::all()->contains(0)
User::all()->contains(User::first())
App\Models\Friend::all()
User::find(11)->friends
User::find(11)->friends->pivoy
User::find(11)->friends->pivot
User::first()->friends
App\Models\Friend::all()
$user = User::last()
$user = User::find(11)
$rel = $user->friends()
$rel->attach(1)
$rel->attach(User::first())
$user->friends
$user = User::find(11)
$rel = $user->friends()
$rel->attach(9)
$user->friends
$rel->attach(9)
$user->friends
$rel->status
$rel->pivot
$rel->pivot()
User::find(11)->friends
App\Models\Friend::all()
App\Models\Friend::all()
User::first()->friend(1)
User::whereRaw()
User::whereIn()
User::whereIn("id",Friend::pluck("user_id"))
User::whereIn("id",App\ModelsFriend::pluck("user_id"))
User::whereIn("id",App\Models\Friend::pluck("user_id"))
User::whereIn("id",App\Models\Friend::pluck("user_id"))->get()
strtotime()
strtotime(User::first()->created_at)
$time = strtotime(User::first()->created_at)
date("s",$time)
date("S",$time)
date("p",$time)
date("Y",$time)
date("D",$time)
date("H",$time)
date("M",$time)
date("m",$time)
date("g",$time)
date("g",$time)
$time \ 60 \ 24
echo ($time \ 60 \ 24)
echo $time \ 60 \ 24;
echo 60 \ 24;
echo 60 \\ 24;
echo 60 + 24;
echo 60 ;
echo $time / 60 / 24;
echo $time / 60 / 24 ;
echo $time / 60 / 24 / 360;
$time
echo $time / 60 / 60 / 24 / 260;
echo $time / 60 / 60 / 24 / 360;
2022 - 1970
echo $time / 60 / 60 / 24 / 12;
echo $time / 60 / 60 / 24 / 30;
date("Y-M-D",time())
date("Y-M-D-d",time())
date("Y-M-d",time())
date("Y-m-d",time())
date("y-m-d",time())
date("y-m-d",time())
date("H",time())
date("H-h",time())
date("H",time())
date("H",time())
date("H",time())
date("H",time())
date("H",time())
date("m",time())
date("M",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("g",time())
date("H:i",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",time())
date("H:i:s",strtotime(User::first()->created_at))
Storage
Storage::class
Storage::get()
Storage::get("docs")
Storage::get("docs/artisan.md")
Likes::all()
Friend::class
Friend::all()
App\Models\Friend::all()
User::first()
User::first()->friends
User::find(2)->friendRequest
User::find(3)->friend(4)
User::find(3)->friend(1)
User::find(2)->friend(1)
User::first()
User::first()
User::first()
User::first()
Likes::all()
App\Models\Likes::all()
App\Models\Friend::all()
App\Models\Friend::firstOrFail()
App\Models\User::firstOrFail();
$user = new User
$user
$user->get()
$user->find(1)
$user->name ="aldo"
$user->get()
$user->save()
$user->name
Post::all()
ig
if("")echo 100
if(" ")echo 100
""
""??100
true?:200
100?:200
100?9:200
User::first()->delete()
array_pad
array_pad()
array_pad([9,9,9,9,9], 3, null)
array_pad([9,9,9,9,9,[9,7]], 3, null)
array_pad([9,9,9,9,9,[9,7]], 9, null)
array_pad([9,9,9,9,9,[9,7]], 1, null)
array_pad([9,9,9,9,9,[9,7]], 30, null)
array_chunk([],2)
array_chunk([9,7,7,9],2)
User::first()->limes
User::first()->likes
User::first()->likes()
User::findOrCreate()
User::findOr()
User::findOr(1)
User::findOr(1,fn()=>1)
User::findOr(1,fn()=>1)
$user = User::first()
$rl = $user->likes()
$ls->attach(2)
$ls->attach(1)
$ls
$rl->attach(1)
Post::find(1)
$rl
$rl->all()
$rl->get()
$rl->attach(2)
$rl->get()
$rl->attach(1)
$rl->get()
$rl->where()
$rl->where("id",1)
$rl->where("id",1)->get()
User::all()
$rl = User::find(3)->likes()
$rl->attach(2)
$rl->get()
User::first()->limes
User::first()->likes
User::first()->likes->where()
User::first()->likes->where("id",1)->count()
User::first()->likes->where("id",9)
User::first()->likes->where("id",9)
User::first()->likes->where("id",1)
User::first()->likes->detach
User::first()->likes->detach()
User::first()->likes()->detach(1)
Post
Post::first()->likes
Post::first()->likes()
Post::first()->likes->all()
Post::first()->like
Post::first()->like
Post::first()->userLimes
Post::first()->userLikes
Post::first()
Post::first()
Post::first()->userLikes
Post::first()->userLikes
Post::all()
Post::find(2)
Post::find(2)->likes
Post::find(2)->userLikes
Post::find(2)->userLikes
User::all()
User::find(3)->likes
Post::find(2)
Post::find(2)->likes
Post::find(2)->userLikes
$user = User::find(2)
$user->likes
$user->likes
$user->likes
$user->likes
$user->likes
$user = User::find(2)
$user->likes
$user->likes
$user->likes
$user->likes
$user = User::find(2)
$user->likes
$user->likes
User::factory(5)->create()
User::factory(50)->create()
User::factory(500)->create()
User::all()->count()
User::factory(500)->create()
Post::first()->userLines
Post::first()->userLikes
Post::first()->userLikes->pluck('id')
Post::factory(100)->create()
Post::all()
User::first()->comments
Post::first()->comments
Post::first()->comments
Post::first()->comments
Post::first()->comments->pivot
Post::first()->comments
Post::find(5)
Post::find(5)->comments
Post::find(3)->comments
Post::find(5)->comments
Post::find(5)->comments()
Post::find(5)->comments()->where(
)
Post::find(5)->comments()->where("user_id",3)
Post::find(5)->comments()->where("user_id",2)
Post::find(5)->comments()->where("user_id",4)
Post::find(5)->comments()->where("user_id",5)
Post::find(5)->comments()->where("user_id",1)
Post::find(5)->comments()->where("user_id",1)->get()
Post::find(5)->comments()->where("user_id",3)->get()
Post::find(5)->comments->where("user_id",3)->get()
Post::find(5)->comments()->wherePivot()
Post::find(5)->comments()->wherePivot("body")
Post::find(5)->comments()->wherePivot("body")->get()
Post::find(5)->comments()->wherePivot("user_id",2)->get()
Post::find(5)->comments()->wherePivot("user_id",3)->get()
Post::find(5)->comments()->wherePivot("user_id",3)->pluck('id')
Post::find(5)->comments()->wherePivot("user_id",3)->pluck('body')
Post::find(5)->comments()->wherePivot("user_id",3)->first()->body
Post::find(5)->comments()->wherePivot("user_id",3)->first()
Post::find(5)->comments()->wherePivot("user_id",3)->pivot
Post::find(5)->comments()->wherePivot("user_id",3)->pivot()
Post::find(5)->comments()->wherePivot("user_id",3)->pluck("body")
Post::find(5)->comments()->all()
Post::find(5)->comments()->get()
Post::find(5)->comments()->pluck("user_id")
Post::find(5)->comments()->pluck("user_id","body")
Post::find(5)->comments
Post::find(5)->comments->push()
Post::find(5)->comments->each()
Post::find(5)->comments->each(function($e){e->push()})
Post::find(5)->comments->each(function($e){e->push();})
Post::find(5)->comments->each(function($e){$e->push();})
Post::find(5)->comments->each(function($e){$e->push(2);})
Post::find(5)->comments->each(function($e){$e->push("hai");})
Post::find(5)->comments->each(function($e){echo $e;})
Post::find(5)->comments->each(function($e){echo $e->comments;})
Post::find(5)->comments->each(function($e){echo $e->comments->where("user_id",$e->id);})
Post::find(5)->comments->each(function($e){echo $e->comments->where("user_id",$e->id)->first();})
Post::find(5)->comments->each(function($e){echo $e->comments->where("user_id",$e->id)->first();}
;
Post::find(5)->comments->first()
Post::find(5)->comments->first()->body
Post::find(5)->comments()->first()->body
Post::find(5)->comments()
Post::find(5)->comments()->all()
Post::find(5)->comments()->get()
Post::find(5)->comments()->get('body')
Post::find(5)->comments()->get(['body'])
echo Post::find(5)->comments()->get(['body'])
echo Post::find(5)->comments()->get(['body'])
Post::find(5)->comments()->get(['body'])
Post::find(5)->comments()->get(['body'])->body
Post::find(5)->comments()->get(['body'])
Post::find(5)->comments()->pluck("body")
Post::find(5)->comments()->pluck("body","user_id")
Post::find(5)->comments()->pluck("body","user_id")
Post::find(5)->comments->pluck("body","user_id")
Post::find(5)->comments()->pluck("body","user_id")
echo Post::find(5)->comments
echo Post::find(5)->comments->each()
echo User::first()
echo User::first()->push()
echo User::first()->push(2)
echo User::first()->push(2)44
echo User::first()->push(332)
$u = User::first()
echo $u
$u->push("hai")
echo $u
$u->hai = ''
echo $u
$u = $u->toArray()
$u
$u->push(2)
$u['body']=""
$u
Post::find(5)->comments->first()
Post::find(5)->comments->first()->body
Post::find(5)->comments()->first()
echo Post::find(5)->comments()->first()
echo Post::find(5)->comments()->pivot
echo Post::find(5)->comments()->pivot()
echo Post::find(5)->comments()->get()
echo Post::find(5)->comments()->get(["body"])
echo Post::find(5)->comments()
Comment::first()
\App\Models\Comment::first()
\App\Models\Comment::all()
User::all()
Post::first()->lines
Post::first()->likes
Post::first()->likes
Post::first()->likes
Post::factory(5)->create()
User::factory(5)->create()
Post::factory(5)->create()
Post::first()->likes
Post::first()->likes()
App\Models\Likes::all()
App\Models\Likes::all()
App\Models\Likes::all()
App\Models\Likes::first()
Likes::create()
App\Models\Likes::create()
User::factory(5)->create()
Post::factory(5)->create()
Post::factory(5)->create()
Post::first()->likes
Post::first()->likes
Post::first()->likes->count()
User::whereIn()
User::whereIn("id",Post::pluck('id'))
User::whereIn("id",Post::pluck('id'))->get()
User::whereIn("id",Like::where('post_id',1))
User::whereIn("id",App\Models\Like::where('post_id',1))
User::whereIn("id",App\Models\Like::where('post_id',1))->get()
User::whereIn("id",App\Models\Like::where('post_id',1)->pluck('id'))->get()
User::findOrCreate()
User::findOr()
User::findOr(3)
User::whereOr()
User::whereOr()->get()
User::whereOr()->get()
App\Models\Comment
App\Models\Comment::all()
Post::find(3)->comments
Post::all()
Like::all()
App\ModelsLike::all()
App\Models\Like::all()
App\Models\Like::all()
App\Models\Like::all()->map()
App\Models\Like::all()->sum()
collect()
collect(1,2)
collect(1,2,3)
collect([2,9])
collect([2,9])->sum()
collect([2,9])->reduce()
collect([2,9])->reduce(fn()=>)
collect([2,9])->reduce(fn()=>4)
collect([2,9])->reduce(fn($e)=>$e)
collect([2,9])->reduce(fn($e)=>$e+1)
collect([2,9])->reduce(fn($e)=>$e+$e)
collect([2,9])->reduce(fn($e,$i)=>$e+$i)
collect([2,9])->reduce(fn($e,$i)=>$e+$i,10)
User::all()
App\Models\Comment::all()
App\Models\Comment::all()
App\Models\Comment::first()->created_at
echo App\Models\Comment::first()->created_at
User::findOr(1,fn($e)=>$e)
User::findOr(10,fn($e)=>$e)
User::findOr(10,fn($e)=>$e)
App\Models\Like::all()
App\Models\Like::all()
App\Models\Like::all()
App\Models\Like::all()
App\Models\Like::all()
App\Models\Like::all()
App\Models\Like::all()
Post::all()
Post::all()
Post::all()
Post::all()
Post::all()
Post::first()->getImages()
Post::first()->getImages()
Comment::create(["post_id"=>1,"user_id"=>1])
Comment::create(["post_id"=>1,"user_id"=>1,"body"=>"anuing"])
Comment::first()->user
Post::all()
Post::find(27)->comments
Post::find(27)->comments
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"anuing"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro bror"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro an"])
Comment::create(["post_id"=>26,"user_id"=>1,"body"=>"boro an"])
Comment::create(["post_id"=>28,"user_id"=>1,"body"=>"boro an"])
Comment::create(["post_id"=>28,"user_id"=>1,"body"=>"boro an"])
User::all()
Friend::all()
Friend::find(1)->update(['status'=>'accepted'])
Friend::find(1)->update(['status'=>'accepted'])
Friend::find(2)->update(['status'=>'accepted'])
Friend::create(['user_id'=>3,"friend_id"=>1,"status"=>"accepted"])
User::find(3)
User::find(3)->friends
Post::whereIn("user_id",User::find(3)->friends->pluck('friend_id'))
Post::whereIn("user_id",User::find(3)->friends->pluck('friend_id'))->get()
Post::whereIn("user_id",User::find(3)->friends->pluck('friend_id'))->get()
User::find(3)
User::find(3)->friends
User::find(3)->friends()->pluck('user_id')
Post::factory(100)->create()
User::factory(100)->create()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
User::all()
Friend::all()
Friend::all()
Friend::all()->each(fn($e)=>$e->delete())
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::create(["user_id"=>3,"friend_id"=>2,"status"=>"accepted"])
Friend::all()
User::find(3)->friend(2)
Friend::all()->each(fn($e)=>$e->delete())
Friend::create(["user_id"=>3,"friend_id"=>2,"status"=>"accepted"])
User::find(2)->friend(3)
Friend::all()->each(fn($e)=>$e->delete())
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
Friend::all()
User::all()
User::find(3)->requests
User::find(3)->requests
DB::select()
DB::select('select * from users where name like "%a%"')
DB::select('select * from users where name like "%h%"')
$e = DB::select('select * from users where name like "%h%"')
$e
$e = DB::select('select * from users where name like "%%"')
User::all())
User::all()
User::all()[0]
User::where("id",1)
User::first()->posts
User::first()->post
User::first()->friends
User::first()->friends[0]
Post::first()->likes
Post::first()->likes
Post::all()
Post::first()->likes[0]
Post::first()->likes[0]->name
User::factory(29)->create()
Post::factory(30)->create()
User::whereNot('id',1)
User::whereNot('id',1)->get()
User::whereNot('id',1)->get()->each(fn($e)=>$e->delete())
Post::factory(30)->create()
User::all()
Post::whereNot('id',1)->get()->each(fn($e)=>$e->delete())
Post::factory(30)->create()
Post::factory(30)->create()
Post::whereNot('id',1)->get()->each(fn($e)=>$e->delete())
Post::factory(30)->create()
Post::all((
))
Post::all()
User::all()
Post::all()
Post::factory(30)->create()
User::all()
User::find(2)->update(["use_password"=>false])
User::find(2)->update(["use_password"=>true])
User::find(2)->update(["use_password"=>false])
User::find(2)->update(["use_password"=>false])
User::find(2)->update(["use_password"=>0])
User::find(2)->update(["use_password"=>10])
User::all()
User::find(2)->update(["use_password"=>"h"])
User::find(2)->update(["use_password"=>"h"])
User::find(2)->update(["use_password"=>false])
User::find(2)->update(["use_password"=>false])
User::factory(1000)->create()
User::all()
User::all()
User::all()
evetnt(new App\Events\UserCreated())
event(new App\Events\UserCreated())
event(new App\Events\UserCreatedEvent())
event(new App\Events\UserCreatedEvent(User::first()))
event(new App\Events\UserCreatedEvent(User::first()))
event(new App\Events\UserCreatedEvent(User::first()))
event(new App\Events\UserCreatedEvent(User::first()))
event(new App\Events\UserCreatedEvent(User::first()))
event(new App\Events\UserCreatedEvent(User::first()))
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
echo event(new App\Events\TestEvent())
event(new App\Events\TestEvent())
User::factory(5)->make()
User::create([])
User::factory(5)->make()
User::create(["name"=>"also","email"=>"a@gmail.com","password"=>"1234"])
User::create(["name"=>"also","email"=>"a@gmail.com","password"=>"1234"])
User::where("email","a@gmail.com")
User::where("email","a@gmail.com")->first()
User::where("email","a@gmail.com")->where("password","1234")->first()
User::where("email","a@gmail.com")->where("password",1234)->first()
User::where("email","a@gmail.com")->where("password",123)->first()
User::where("email","a@gmail.com")->where("password",1234)->first()
User::where("email","a@gmail.com")->where("password",1234)->get()
User::where("email","a@gmail.com")->where("password",1234)->first()
User::where("email","a@gmail.com")->where("password",1234)->first()->update(["remember_token"=>Str::random(10)])
User::where("email","a@gmail.com")->where("password",1234)->first()
User::create(["name"=>"also","email"=>"a@gmail.com","password"=>"1234"])
User::create(["name"=>"also","email"=>"al@gmail.com","password"=>"1234"])
User::first()->toArray()
User::first()->toArray()
User::create(["name"=>"also","email"=>"al@gmail.com","password"=>"1234","remember_token"=>Str::random(10)])
Storage
Storage()
use Illuminate\Support\Facades\Storage;
Storage::get('hai')
Storage::get('hai')
Storage::get('public/hai')
Storage::get('public/bro')
Storage::get('public/videos/v1.mp4')
Storage::get('videos/v1.mp4')
DB
use App\Models\User
User
User::class
User::all()
exit
